name: Build & Push Docker images

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-native-image:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build JAR with Maven
      run: ./mvnw -B package -Pnative
    - name: Build Docker image & Push to Docker Hub
      run: ./mvnw -B spring-boot:build-image -Pnative -Ddocker.registry.username=${{ secrets.DOCKER_HUB_USERNAME }} 
        -Ddocker.registry.password=${{ secrets.DOCKER_HUB_TOKEN }}
    - name: Cache Maven artifacts
      uses: actions/cache@v3.0.0
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

  build-JVM-image:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build JAR with Maven
        run: ./mvnw -B package -Pjvm
      - name: Build Docker image & Push to Docker Hub
        run: ./mvnw -B spring-boot:build-image -Pjvm -Ddocker.registry.username=${{ secrets.DOCKER_HUB_USERNAME }}
          -Ddocker.registry.password=${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Cache Maven artifacts
        uses: actions/cache@v3.0.0
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
